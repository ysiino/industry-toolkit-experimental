{
 "Resources": {
  "ProjectArtifactsBucketAF3554BA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/ProjectArtifactsBucket/Resource"
   }
  },
  "ArtifactDomain": {
   "Type": "AWS::CodeArtifact::Domain",
   "Properties": {
    "DomainName": "industry-toolkit-experimental"
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/ArtifactDomain"
   }
  },
  "ArtifactRepository": {
   "Type": "AWS::CodeArtifact::Repository",
   "Properties": {
    "DomainName": "industry-toolkit-experimental",
    "RepositoryName": "industry-toolkit-experimental"
   },
   "DependsOn": [
    "ArtifactDomain"
   ],
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/ArtifactRepository"
   }
  },
  "BuildProjectRoleAA92C755": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/BuildProject/Role/Resource"
   }
  },
  "BuildProjectRoleDefaultPolicy3E9F248C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "BuildProject097C5DB7"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "codeartifact:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "sts:GetServiceBearerToken",
       "Condition": {
        "StringEquals": {
         "sts:AWSServiceName": [
          "codeartifact.amazonaws.com"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProjectArtifactsBucketAF3554BA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ProjectArtifactsBucketAF3554BA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BuildProjectRoleDefaultPolicy3E9F248C",
    "Roles": [
     {
      "Ref": "BuildProjectRoleAA92C755"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/BuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "BuildProject097C5DB7": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "CODEARTIFACT_DOMAIN",
       "Type": "PLAINTEXT",
       "Value": "industry-toolkit-experimental"
      },
      {
       "Name": "CODEARTIFACT_REPOSITORY",
       "Type": "PLAINTEXT",
       "Value": "industry-toolkit-experimental"
      }
     ],
     "Image": "aws/codebuild/amazonlinux2-x86_64-standard:5.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "BuildProjectRoleAA92C755",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - aws --version\n      - UNZIP_DIR=`/usr/bin/uuidgen`\n  build:\n    commands:\n      - aws s3 cp ${PROJECT_S3_ZIP} project.zip\n      - unzip project.zip -d ${UNZIP_DIR}\n      - cd ${UNZIP_DIR}\n      - PROJECT_NAME=`ls -1 | head -1`\n      - cd ${PROJECT_NAME}\n      - ./gradlew build\n      - cd build/generated-sdk/typescript\n      - npm install\n      - npm run build\n      - cp package.json dist/\n      - cd dist\n      - aws codeartifact login --tool npm --repository ${CODEARTIFACT_REPOSITORY} --domain ${CODEARTIFACT_DOMAIN}\n      - npm publish\n",
     "Type": "NO_SOURCE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/BuildProject/Resource"
   }
  },
  "GitHubPATSecretEAF9E881": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Secret for storing GitHub Personal Access Token (PAT)",
    "GenerateSecretString": {}
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/GitHubPATSecret/Resource"
   }
  },
  "PipelineBuilderLayer9C0781C1": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.12"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bd18d02400d4d4bee62705fd91a3a999ebe0a92dd1c760bc7137596656063e91.zip"
    },
    "Description": "Layer containing Python libraries for Pipeline Builder"
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderLayer/Resource",
    "aws:asset:path": "asset.bd18d02400d4d4bee62705fd91a3a999ebe0a92dd1c760bc7137596656063e91",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "PipelineBuilderLambdaServiceRole65C24FD9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderLambda/ServiceRole/Resource"
   }
  },
  "PipelineBuilderLambdaServiceRoleDefaultPolicy068CCA97": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BuildProject097C5DB7",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProjectArtifactsBucketAF3554BA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ProjectArtifactsBucketAF3554BA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "GitHubPATSecretEAF9E881"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineBuilderLambdaServiceRoleDefaultPolicy068CCA97",
    "Roles": [
     {
      "Ref": "PipelineBuilderLambdaServiceRole65C24FD9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PipelineBuilderLambda0619F52F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0e0b438e19749dfdeba3cba52319731cb92bdec2708291bbbdf06b8086841053.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "ProjectArtifactsBucketAF3554BA"
      },
      "GIT_SECRET_ARN": {
       "Ref": "GitHubPATSecretEAF9E881"
      },
      "CODEBUILD_PROJECT": {
       "Ref": "BuildProject097C5DB7"
      }
     }
    },
    "Handler": "pipeline_builder_lambda.handler",
    "Layers": [
     {
      "Ref": "PipelineBuilderLayer9C0781C1"
     },
     "arn:aws:lambda:us-west-2:553035198032:layer:git-lambda2:8"
    ],
    "Role": {
     "Fn::GetAtt": [
      "PipelineBuilderLambdaServiceRole65C24FD9",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 300
   },
   "DependsOn": [
    "PipelineBuilderLambdaServiceRoleDefaultPolicy068CCA97",
    "PipelineBuilderLambdaServiceRole65C24FD9"
   ],
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderLambda/Resource",
    "aws:asset:path": "asset.0e0b438e19749dfdeba3cba52319731cb92bdec2708291bbbdf06b8086841053",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PipelineBuilderLambdaInvokeFcyXBRX02EWa52GlFECQiCzDt0fdRUDi4mo4foC5aUA8527876": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PipelineBuilderLambda0619F52F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderLambda/InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU="
   }
  },
  "PipelineBuilderApi9322B662": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This service generates software projects from templates.",
    "Name": "Pipeline Builder Service"
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Resource"
   }
  },
  "PipelineBuilderApiCloudWatchRole828546F2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/CloudWatchRole/Resource"
   }
  },
  "PipelineBuilderApiAccountE24F674B": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "PipelineBuilderApiCloudWatchRole828546F2",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "PipelineBuilderApi9322B662"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Account"
   }
  },
  "PipelineBuilderApiDeployment501C7E5Ad8d79984d0596c6e11553510337f5184": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This service generates software projects from templates.",
    "RestApiId": {
     "Ref": "PipelineBuilderApi9322B662"
    }
   },
   "DependsOn": [
    "PipelineBuilderApiprojectPOST1F14F306",
    "PipelineBuilderApiproject8A7E958B"
   ],
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Deployment/Resource"
   }
  },
  "PipelineBuilderApiDeploymentStageprodE85DD005": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "PipelineBuilderApiDeployment501C7E5Ad8d79984d0596c6e11553510337f5184"
    },
    "RestApiId": {
     "Ref": "PipelineBuilderApi9322B662"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "PipelineBuilderApiAccountE24F674B"
   ],
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/DeploymentStage.prod/Resource"
   }
  },
  "PipelineBuilderApiproject8A7E958B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PipelineBuilderApi9322B662",
      "RootResourceId"
     ]
    },
    "PathPart": "project",
    "RestApiId": {
     "Ref": "PipelineBuilderApi9322B662"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Default/project/Resource"
   }
  },
  "PipelineBuilderApiprojectPOSTApiPermissionPipelineBuilderStackExperimentalPipelineBuilderApi5268D8A3POSTproject6E47797C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PipelineBuilderLambda0619F52F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PipelineBuilderApi9322B662"
       },
       "/",
       {
        "Ref": "PipelineBuilderApiDeploymentStageprodE85DD005"
       },
       "/POST/project"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Default/project/POST/ApiPermission.PipelineBuilderStackExperimentalPipelineBuilderApi5268D8A3.POST..project"
   }
  },
  "PipelineBuilderApiprojectPOSTApiPermissionTestPipelineBuilderStackExperimentalPipelineBuilderApi5268D8A3POSTproject36F36472": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PipelineBuilderLambda0619F52F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PipelineBuilderApi9322B662"
       },
       "/test-invoke-stage/POST/project"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Default/project/POST/ApiPermission.Test.PipelineBuilderStackExperimentalPipelineBuilderApi5268D8A3.POST..project"
   }
  },
  "PipelineBuilderApiprojectPOST1F14F306": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PipelineBuilderLambda0619F52F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PipelineBuilderApiproject8A7E958B"
    },
    "RestApiId": {
     "Ref": "PipelineBuilderApi9322B662"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/PipelineBuilderApi/Default/project/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQTW/CMAyGfwv3kI0hJu3Ih3batIpJuyKTms7QJFXiClVR//vyUTE4+bHz2n6dF7lYreTzDK5+rurLvKWjDN8M6iJi6RD8UoZNry7IYnsyE5WwAY+jULZGcEwnUCxD1OysBjJJvcfOemLrhiI79tTWMlTOnlHleROOgkDLsLct5r4UK9uSGrIo0yg8KofsNRho0EWXOU+KQqNoQR9rkOEDBnQ/6DzZbOQhf++N4unhnit0mnySxFXLA3gfl8l1CgI6aoDxCkN0iZ7XHZUDb7hWyvaGxQ671g4aTTZ2l8U/bfJ1BWKr7Z3C9Im3ZJpZ+BP519apVGgc/3XZVRpEpkmKr567nh/aI2+tqYnzQdUQR5inpXyTi9fZ2RPNXbRLGuW+xD/2SSpZCQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "PipelineBuilderStack-Experimental/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "PipelineBuilderApiEndpoint0417F4B5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PipelineBuilderApi9322B662"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PipelineBuilderApiDeploymentStageprodE85DD005"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}